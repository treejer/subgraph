specVersion: 0.0.6
description: Treejer subgraph v1
repository: https://github.com/treejer/subgraph
features:
  - ipfsOnEthereumContracts
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Tree
    network: {{NETWORK}}
    source:
      address: '{{CONTRACT_TREE_ADDRESS}}'
      abi: ITree
      startBlock: {{CONTRACT_TREE_START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Tree
      abis:
        - name: ITree
          file: ./abis/ITree.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
      file: ./src/mappings/Tree.ts      

  - kind: ethereum/contract
    name: Planter
    network: {{NETWORK}}
    source:
      address: '{{CONTRACT_PLANTER_ADDRESS}}'
      abi: IPlanter
      startBlock: {{CONTRACT_PLANTER_START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Planter
      abis:
        - name: IPlanter
          file: ./abis/IPlanter.json
      eventHandlers:
        - event: PlanterJoined(address)
          handler: handlePlanterJoined
        - event: OrganizationJoined(address)
          handler: handleOrganizationJoined
        - event: PlanterUpdated(address)
          handler: handlePlanterUpdated
        - event: AcceptedByOrganization(address)
          handler: handleAcceptedByOrganization
        - event: RejectedByOrganization(address)
          handler: handleRejectedByOrganization
        - event: OrganizationMemberShareUpdated(address)
          handler: handleOrganizationMemberShareUpdated
      file: ./src/mappings/Planter.ts

  - kind: ethereum/contract
    name: TreeFactory
    network: {{NETWORK}}
    source:
      address: '{{CONTRACT_TREE_FACTORY_ADDRESS}}'
      abi: ITreeFactory
      startBlock: {{CONTRACT_TREE_FACTORY_START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Tree
        - TempTree
        - Planter
        - TreeUpdate
        - Funder
      abis:
        - name: ITreeFactory
          file: ./abis/ITreeFactory.json
      eventHandlers:
        - event: TreeListed(uint256)
          handler: handleTreeListed
        - event: TreeAssigned(uint256)
          handler: handleTreeAssigned
        - event: AssignedTreePlanted(uint256)
          handler: handleAssignedTreePlanted
        - event: TreePlanted(uint256)
          handler: handleTreePlanted
        - event: TreeVerified(uint256,uint256)
          handler: handleTreeVerified
        - event: TreeRejected(uint256)
          handler: handleTreeRejected
        - event: AssignedTreeVerified(uint256)
          handler: handleAssignedTreeVerified
        - event: AssignedTreeRejected(uint256)
          handler: handleAssignedTreeRejected
        - event: TreeUpdated(uint256)
          handler: handleTreeUpdated
        - event: TreeUpdatedVerified(uint256)
          handler: handleTreeUpdatedVerified
        - event: TreeUpdateRejected(uint256)
          handler: handleTreeUpdateRejected
        - event: TreeSpecsUpdated(uint256,string)
          handler: handleTreeSpecsUpdated
      file: ./src/mappings/TreeFactory.ts

  - kind: ethereum/contract
    name: Auction
    network: {{NETWORK}}
    source:
      address: '{{CONTRACT_TREE_AUCTION_ADDRESS}}'
      abi: IAuction
      startBlock: {{CONTRACT_TREE_AUCTION_START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Tree
        - Planter
        - Auction
        - Bid
        - Funder
      abis:
        - name: IAuction
          file: ./abis/IAuction.json
        - name: IRegularSale
          file: ./abis/IRegularSale.json
      eventHandlers:
        - event: AuctionCreated(uint256)
          handler: handleAuctionCreated
        - event: HighestBidIncreased(uint256,uint256,address,uint256,address)
          handler: handleHighestBidIncreased
        - event: AuctionSettled(uint256,uint256,address,uint256,address)
          handler: handleAuctionSettled
        - event: AuctionEnded(uint256,uint256)
          handler: handleAuctionEnded
        - event: AuctionEndTimeIncreased(uint256,uint256)
          handler: handleAuctionEndTimeIncreased
      file: ./src/mappings/Auction.ts

  - kind: ethereum/contract
    name: IncrementalSale
    network: {{NETWORK}}
    source:
      address: '{{CONTRACT_INCREMENTAL_SELL_ADDRESS}}'
      abi: IIncrementalSale
      startBlock: {{CONTRACT_INCREMENTAL_SELL_START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Tree
        - IncrementalSale
        - Funder
      abis:
        - name: IIncrementalSale
          file: ./abis/IIncrementalSale.json
        - name: IRegularSale
          file: ./abis/IRegularSale.json
      eventHandlers:
        - event: IncrementalSaleUpdated()
          handler: handleIncrementalSaleUpdated
        - event: IncrementalSaleDataUpdated()
          handler: handleIncrementalSaleDataUpdated
        - event: TreeFunded(address,address,address,uint256,uint256)
          handler: handleTreeFunded
      file: ./src/mappings/IncrementalSale.ts

  - kind: ethereum/contract
    name: RegularSale
    network: {{NETWORK}}
    source:
      address: '{{CONTRACT_REGULAR_SELL_ADDRESS}}'
      abi: IRegularSale
      startBlock: {{CONTRACT_REGULAR_SELL_START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Tree
        - RegularSale
        - Funder
      abis:
        - name: IRegularSale
          file: ./abis/IRegularSale.json
      eventHandlers:
        - event: TreeFunded(address,address,address,uint256,uint256)
          handler: handleTreeFunded
        - event: RegularMint(address,uint256,uint256)
          handler: handleRegularMint
        - event: TreeFundedById(address,address,address,uint256,uint256)
          handler: handleTreeFundedById
        - event: PriceUpdated(uint256)
          handler: handlePriceUpdated
        - event: ReferralRewardClaimed(address,uint256,uint256)
          handler: handleReferralRewardClaimed
      file: ./src/mappings/RegularSale.ts

  - kind: ethereum/contract
    name: PlanterFund
    network: {{NETWORK}}
    source:
      address: '{{CONTRACT_PLANTER_FUND_ADDRESS}}'
      abi: IPlanterFund
      startBlock: {{CONTRACT_PLANTER_FUND_START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - TotalFund
      abis:
        - name: IPlanterFund
          file: ./abis/IPlanterFund.json
      eventHandlers:
        - event: ProjectedEarningUpdated(uint256,uint256,uint256)
          handler: handleProjectedEarningUpdated
        - event: PlanterTotalClaimedUpdated(uint256,address,uint256,address)
          handler: handlePlanterTotalClaimedUpdated
        - event: BalanceWithdrew(uint256,address)
          handler: handleBalanceWithdrew
      file: ./src/mappings/PlanterFund.ts

  - kind: ethereum/contract
    name: Allocation
    network: {{NETWORK}}
    source:
      address: '{{CONTRACT_FINANCIAL_MODEL_ADDRESS}}'
      abi: IAllocation
      startBlock: {{CONTRACT_FINANCIAL_MODEL_START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - TotalFund
      abis:
        - name: IAllocation
          file: ./abis/IAllocation.json
      eventHandlers:
        - event: AllocationDataAdded(uint256)
          handler: handleAllocationDataAdded
        - event: AllocationToTreeAssigned(uint256)
          handler: handleAllocationToTreeAssigned
      file: ./src/mappings/Allocation.ts

  - kind: ethereum/contract
    name: DaiFund
    network: {{NETWORK}}
    source:
      address: '{{CONTRACT_DAI_FUNDS_ADDRESS}}'
      abi: IDaiFund
      startBlock: {{CONTRACT_DAI_FUNDS_START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - TotalFund
      abis:
        - name: IDaiFund
          file: ./abis/IDaiFund.json
      eventHandlers:
        - event: ResearchBalanceWithdrew(uint256,address,string)
          handler: handleResearchBalanceWithdrew
        - event: LocalDevelopmentBalanceWithdrew(uint256,address,string)
          handler: handleLocalDevelopmentBalanceWithdrew
        - event: InsuranceBalanceWithdrew(uint256,address,string)
          handler: handleInsuranceBalanceWithdrew
        - event: TreasuryBalanceWithdrew(uint256,address,string)
          handler: handleTreasuryBalanceWithdrew
        - event: TreeFunded(uint256,uint256,uint256)
          handler: handleTreeFunded
      file: ./src/mappings/DaiFund.ts

  - kind: ethereum/contract
    name: WethFund
    network: {{NETWORK}}
    source:
      address: '{{CONTRACT_WETH_FUNDS_ADDRESS}}'
      abi: IWethFund
      startBlock: {{CONTRACT_WETH_FUNDS_START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - TotalFund
      abis:
        - name: IWethFund
          file: ./abis/IWethFund.json
      eventHandlers:
        - event: ResearchBalanceWithdrew(uint256,address,string)
          handler: handleResearchBalanceWithdrew
        - event: LocalDevelopmentBalanceWithdrew(uint256,address,string)
          handler: handleLocalDevelopmentBalanceWithdrew
        - event: InsuranceBalanceWithdrew(uint256,address,string)
          handler: handleInsuranceBalanceWithdrew
        - event: TreasuryBalanceWithdrew(uint256,address,string)
          handler: handleTreasuryBalanceWithdrew
        - event: TreeFunded(uint256,uint256,uint256)
          handler: handleTreeFunded
      file: ./src/mappings/WethFund.ts

  - kind: ethereum/contract
    name: Attribute
    network: {{NETWORK}}
    source:
      address: '{{CONTRACT_TREE_ATTRIBUTE_ADDRESS}}'
      abi: IAttribute
      startBlock: {{CONTRACT_TREE_ATTRIBUTE_START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Tree
        - Attribute
        - TreeWithAttributeProblem
      abis:
        - name: IAttribute
          file: ./abis/IAttribute.json
        - name: ITree
          file: ./abis/ITree.json
      eventHandlers:
        - event: AttributeGenerated(uint256)
          handler: handleAttributeGenerated
        - event: AttributeGenerationFailed(uint256)
          handler: handleAttributeGenerationFailed
      file: ./src/mappings/Attribute.ts

  - kind: ethereum/contract
    name: HonoraryTree
    network: {{NETWORK}}
    source:
      address: '{{CONTRACT_COMMUNITY_GIFTS_ADDRESS}}'
      abi: IHonoraryTree
      startBlock: {{CONTRACT_COMMUNITY_GIFTS_START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Tree
        - HonoraryTree
        - HonoraryTreeRecipient
      abis:
        - name: IHonoraryTree
          file: ./abis/IHonoraryTree.json
      eventHandlers:
        - event: TreeRangeSet()
          handler: handleTreeRangeSet
        - event: Claimed(uint256)
          handler: handleClaimed 
        - event: ClaimFailed(address)
          handler: handleRecipientAdded
        - event: RecipientAdded(address)
          handler: handleRecipientAdded
        - event: RecipientUpdated(address)
          handler: handleRecipientUpdated
      file: ./src/mappings/HonoraryTree.ts    
  # - kind: ethereum/contract
  #   name: MarketPlace
  #   network: {{NETWORK}}
  #   source:
  #     address: '{{CONTRACT_MARKET_PLACE_ADDRESS}}'
  #     abi: MarketPlace
  #     startBlock: {{CONTRACT_MARKET_PLACE_START_BLOCK}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.6
  #     language: wasm/assemblyscript
  #     entities:
  #       - Tree
  #       - Model
  #     abis:
  #       - name: MarketPlace
  #         file: ./abis/MarketPlace.json
  #       - name: IPlanterFund
  #         file: ./abis/IPlanterFund.json
  #     eventHandlers:
  #       - event: ModelAdded(uint256,uint8,uint8,uint256,uint256,address,uint256,uint256,uint256,uint256)
  #         handler: handleModelAdded
  #       - event: ModelDataUpdated(uint256,uint8,uint8)
  #         handler: handleModelDataUpdated
  #       - event: PriceUpdated(uint256,uint256)
  #         handler: handlePriceUpdated
  #       - event: ModelDeactivated(uint256,uint256)
  #         handler: handleModelDeactivated
  #       - event: ModelDeleted(uint256)
  #         handler: handleModelDeleted
  #       - event: TreeFunded((uint256,uint256)[],address,address,address,uint256,uint256)
  #         handler: handleTreeFunded
  #       - event: MarketPlaceMint(address,uint256,uint256,uint256,uint256)
  #         handler: handleMarketPlaceMint
  #       - event: SaleModelFinished(uint256)
  #         handler: handleModelFinished
  #     file: ./src/mappings/MarketPlace.ts   

  - kind: ethereum/contract
    name: DAIToken
    network: {{NETWORK}}
    source:
      address: '{{CONTRACT_DAI_TOKEN_ADDRESS}}'
      abi: ERC20
      startBlock: {{CONTRACT_DAI_TOKEN_START_BLOCK}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - ERC20History
        - Planter
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/mappings/DAIToken.ts